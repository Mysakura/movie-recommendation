<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dl.movieservice.dao.MovieCriticsMapper">
  <resultMap id="BaseResultMap" type="com.dl.movieservice.model.MovieCritics">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="short_content" jdbcType="VARCHAR" property="shortContent" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="support" jdbcType="INTEGER" property="support" />
    <result column="digest" jdbcType="VARCHAR" property="digest" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="allow_comment" jdbcType="BIT" property="allowComment" />
    <result column="page_view" jdbcType="INTEGER" property="pageView" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dl.movieservice.model.MovieCritics">
    <result column="front_content" jdbcType="LONGVARCHAR" property="frontContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, movie_id, title, short_content, type, support, digest, status, allow_comment, 
    page_view, create_time, create_user, update_time, update_user, delete_flag
  </sql>
  <sql id="Blob_Column_List">
    front_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dl.movieservice.model.MovieCriticsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from movie_critics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dl.movieservice.model.MovieCriticsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from movie_critics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from movie_critics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from movie_critics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dl.movieservice.model.MovieCriticsExample">
    delete from movie_critics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dl.movieservice.model.MovieCritics">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into movie_critics (movie_id, title, short_content, 
      type, support, digest, 
      status, allow_comment, page_view, 
      create_time, create_user, update_time, 
      update_user, delete_flag, front_content
      )
    values (#{movieId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{shortContent,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{support,jdbcType=INTEGER}, #{digest,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{allowComment,jdbcType=BIT}, #{pageView,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=BIT}, #{frontContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dl.movieservice.model.MovieCritics">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into movie_critics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="shortContent != null">
        short_content,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="support != null">
        support,
      </if>
      <if test="digest != null">
        digest,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="allowComment != null">
        allow_comment,
      </if>
      <if test="pageView != null">
        page_view,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="frontContent != null">
        front_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="shortContent != null">
        #{shortContent,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="support != null">
        #{support,jdbcType=INTEGER},
      </if>
      <if test="digest != null">
        #{digest,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="allowComment != null">
        #{allowComment,jdbcType=BIT},
      </if>
      <if test="pageView != null">
        #{pageView,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="frontContent != null">
        #{frontContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dl.movieservice.model.MovieCriticsExample" resultType="java.lang.Long">
    select count(*) from movie_critics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update movie_critics
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.movieId != null">
        movie_id = #{record.movieId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.shortContent != null">
        short_content = #{record.shortContent,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.support != null">
        support = #{record.support,jdbcType=INTEGER},
      </if>
      <if test="record.digest != null">
        digest = #{record.digest,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.allowComment != null">
        allow_comment = #{record.allowComment,jdbcType=BIT},
      </if>
      <if test="record.pageView != null">
        page_view = #{record.pageView,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=BIT},
      </if>
      <if test="record.frontContent != null">
        front_content = #{record.frontContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update movie_critics
    set id = #{record.id,jdbcType=INTEGER},
      movie_id = #{record.movieId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      short_content = #{record.shortContent,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      support = #{record.support,jdbcType=INTEGER},
      digest = #{record.digest,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      allow_comment = #{record.allowComment,jdbcType=BIT},
      page_view = #{record.pageView,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=BIT},
      front_content = #{record.frontContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update movie_critics
    set id = #{record.id,jdbcType=INTEGER},
      movie_id = #{record.movieId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      short_content = #{record.shortContent,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      support = #{record.support,jdbcType=INTEGER},
      digest = #{record.digest,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      allow_comment = #{record.allowComment,jdbcType=BIT},
      page_view = #{record.pageView,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dl.movieservice.model.MovieCritics">
    update movie_critics
    <set>
      <if test="movieId != null">
        movie_id = #{movieId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="shortContent != null">
        short_content = #{shortContent,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="support != null">
        support = #{support,jdbcType=INTEGER},
      </if>
      <if test="digest != null">
        digest = #{digest,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="allowComment != null">
        allow_comment = #{allowComment,jdbcType=BIT},
      </if>
      <if test="pageView != null">
        page_view = #{pageView,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="frontContent != null">
        front_content = #{frontContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dl.movieservice.model.MovieCritics">
    update movie_critics
    set movie_id = #{movieId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      short_content = #{shortContent,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      support = #{support,jdbcType=INTEGER},
      digest = #{digest,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      allow_comment = #{allowComment,jdbcType=BIT},
      page_view = #{pageView,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=BIT},
      front_content = #{frontContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dl.movieservice.model.MovieCritics">
    update movie_critics
    set movie_id = #{movieId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      short_content = #{shortContent,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      support = #{support,jdbcType=INTEGER},
      digest = #{digest,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      allow_comment = #{allowComment,jdbcType=BIT},
      page_view = #{pageView,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>